Print a hollow diamond pattern using '*'. See examples for more details.



Input Format

The first line of input contains T - the number of test cases. It is followed by T lines, each line contains a single odd integer N - the size of the diamond.



Output Format

For each test case, print the test case number as shown, followed by the diamond pattern, separated by a new line.



Constraints

1 <= T <= 100

3 <= N <= 201



Example

Input

4
3
7
5
15


Output

Case #1:
 *
* *
 *
Case #2:
   *
  * *
 *   *
*     *
 *   *
  * *
   *
Case #3:
  *
 * *
*   *
 * *
  *
Case #4:
       *
      * *
     *   *
    *     *
   *       *
  *         *
 *           *
*             *
 *           *
  *         *
   *       *
    *     *
     *   *
      * *
       *


Explanation



Self Explanatory





#include <bits/stdc++.h>
using namespace std;

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    int t;
    cin >> t;
    for(int k=1;k<=t;k++){
        cout << "Case #" << k << ":" << endl;
        int n;
        cin >> n;
        for(int i=0;i<=(n/2);i++){
            for(int j=0;j<=n/2-i-1;j++){
                cout << " ";
            }
            cout << "*";
            for(int j=0;j<2*i-1;j++){
                cout << " ";
            }
            if(i!=0){
                cout << "*";
            }
            cout << endl;
        }
        for(int i=n/2-1;i>=0;i--){
            for(int j=0;j<=n/2-i-1;j++){
                cout << " ";
            }
            cout << "*";
            for(int j=0;j<2*i-1;j++){
                cout << " ";
            }
            if(i!=0){
                cout << "*";
            }
            cout << endl;
        }
    }  
    return 0;
}
